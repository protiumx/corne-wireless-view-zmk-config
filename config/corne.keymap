/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
       &kp TAB  &kp Q  &kp W  &kp E     &kp R      &kp T      &kp Y          &kp U      &kp I    &kp O     &kp P  &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F      &kp G      &kp H          &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
     &kp LCTRL  &kp Z  &kp X  &kp C     &kp V      &kp B      &kp N          &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                              &mo 1  &kp LCMD  &kp SPACE    &kp RET  &kp BACKSPACE      &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
 &kp GRAVE        &kp F1        &kp F2        &kp F3        &kp F4     &kp F5            &kp F6    &kp F7        &kp F8           &kp F9  &kp F10  &kp F11
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp SLASH         &kp COLON    &trans        &trans           &trans   &trans  &kp F12
    &trans        &trans        &trans        &trans        &trans     &trans    &kp LEFT_ARROW  &kp DOWN  &kp UP_ARROW  &kp RIGHT_ARROW   &trans   &trans
                                              &trans        &trans     &trans            &trans    &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &trans   &kp EXCL              &kp PLUS          &kp LESS_THAN     &kp PRCNT       &kp PERCENT  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_MULTIPLY   &kp KP_PLUS
&trans  &trans  &kp COLON             &kp EQUAL       &kp GREATER_THAN        &trans        &kp DOLLAR  &kp NUMBER_6  &kp NUMBER_5  &kp NUMBER_6    &kp KP_DIVIDE  &kp KP_MINUS
&trans  &trans     &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp KP_MINUS    &kp UNDERSCORE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3     &kp NUMBER_0        &trans
                                         &trans                 &trans        &trans            &trans        &trans        &trans
            >;
        };
    };
};
